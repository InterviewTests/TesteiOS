//
//  InvestimentosViewController.swift
//  Camila-TesteiOS
//
//  Created by camila oliveira on 20/04/18.
//  Copyright Â© 2018 Aliamcami. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InvestimentosDisplayLogic: class{
    func displaySomething(viewModel: Investimentos.Something.ViewModel)
}

class InvestimentosViewController: UIViewController, InvestimentosDisplayLogic{
    @IBOutlet weak var bottoMenuStack: BottomMenuStack?
    @IBOutlet weak var navigationBar: UINavigationBar?
    
    var interactor: InvestimentosBusinessLogic?
    var router: (NSObjectProtocol & InvestimentosRoutingLogic & InvestimentosDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    

    
    // MARK: Setup
    
    private func setup(){
        let viewController = self
        let interactor = InvestimentosInteractor()
        let presenter = InvestimentosPresenter()
        let router = InvestimentosRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad(){
        super.viewDidLoad()
        doSomething()
    }
    
    override func viewWillLayoutSubviews() {
        super.viewWillLayoutSubviews()
        //layout
        bottoMenuStack?.setInvestimentoOn(true)
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething(){
        let request = Investimentos.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Investimentos.Something.ViewModel){
        //nameTextField.text = viewModel.name
    }
    
    @IBAction func contatoButtonClicked(_ sender: Any) {
//        bottoMenuStack?.setInvestimentoOn(false)
        router?.routeToBack(segue: nil)
    }
    
    @IBAction func btnShareClicked() {
        let bounds = UIScreen.main.bounds
        UIGraphicsBeginImageContextWithOptions(bounds.size, true, 0.0)
        self.view.drawHierarchy(in: bounds, afterScreenUpdates: false)
        let img = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        
        let objectsToShare = [img as Any]
        let activityVC = UIActivityViewController(activityItems: objectsToShare, applicationActivities: nil)
        activityVC.excludedActivityTypes = [UIActivityType.airDrop, UIActivityType.addToReadingList]
        self.present(activityVC, animated: true, completion: nil)
    }
}

extension InvestimentosViewController: UINavigationBarDelegate {
    public func position(for bar: UIBarPositioning) -> UIBarPosition {
        return .topAttached
    }
}
