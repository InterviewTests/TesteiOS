//
//  FundsInteractor.swift
//  TesteiOS
//
//  Created by Brendoon Ryos on 21/02/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FundsBusinessLogic {
  func fetchFund(request: Funds.Get.Request)
  func downloadData(request: Funds.Download.Request)
}

protocol FundsDataStore {
  var url: String { get set }
}

class FundsInteractor: FundsBusinessLogic, FundsDataStore {
  var presenter: FundsPresentationLogic?
  var worker: FundsWorker?
  var url: String = ""
  
  init(worker: FundsWorker? = FundsWorker()) {
    self.worker = worker
  }
  
  // MARK: Fetch fund
  func fetchFund(request: Funds.Get.Request) {
    worker?.fetchFund(request: request, completion: { result in
      switch result {
      case .success(let data):
        let response = Funds.Get.Response(fund: data.fund)
        self.presenter?.presentFund(response: response)
      case .failure(let error):
        let response = Funds.Get.Response(error: error)
        self.presenter?.presentErrorMessage(response: response)
      }
    })
  }
  
  // MARK: Fetch data
  func downloadData(request: Funds.Download.Request) {
    url = request.url ?? "https://www.google.com/"
    let response = Funds.Download.Response()
    presenter?.presentDownloadedData(response: response)
  }
}
