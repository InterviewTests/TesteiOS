//
//  InvestmentInteractor.swift
//  TesteiOS
//
//  Created by Tiago Leme on 28/07/18.
//  Copyright (c) 2018 Tiago Leme. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InvestmentBusinessLogic
{
  func fetchFundInfo(request: Investment.FetchFund.Request)
}

protocol InvestmentDataStore
{
  var investmentFund: InvestmentFund? { get }
}

class InvestmentInteractor: InvestmentBusinessLogic, InvestmentDataStore
{
    
  var presenter: InvestmentPresentationLogic?
  var worker: InvestmentWorker?

  var investmentFund: InvestmentFund?
    
  // MARK: Do something
  
  func fetchFundInfo(request: Investment.FetchFund.Request)
  {
    worker = InvestmentWorker()
    worker?.fetchFundInfo(){ result in
        guard let investmentFund = result else {
            print("From Interactor: Failure fetching fund info.")
            return
        }
        
        self.investmentFund = investmentFund
        let response = Investment.FetchFund.Response(investmentFund: investmentFund)
        self.presenter?.presentInvestmentFund(response: response)        
    }
  }
}
