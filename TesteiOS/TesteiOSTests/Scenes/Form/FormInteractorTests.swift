//
//  FormInteractorTests.swift
//  TesteiOS
//
//  Created by lucas.eiji.saito on 22/05/18.
//  Copyright (c) 2018 Accenture. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TesteiOS
import XCTest

class FormInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: FormInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupFormInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupFormInteractor()
  {
    sut = FormInteractor()
  }
  
  // MARK: Test doubles
  
  class FormPresentationLogicSpy: FormPresentationLogic
  {
    var presentFetchedCellsCalled = false
    
    func presentFetchedCells(response: Form.FetchCells.Response)
    {
      presentFetchedCellsCalled = true
    }
  }
  
  // MARK: Tests
  
  func testFetchCells()
  {
    // Given
    let spy = FormPresentationLogicSpy()
    sut.presenter = spy
    let request = Form.FetchCells.Request()
    
    // When
    sut.fetchCells(request: request)
    
    // Then
    XCTAssertTrue(spy.presentFetchedCellsCalled, "fetchCells(request:) should ask the presenter to format the result")
  }
}
