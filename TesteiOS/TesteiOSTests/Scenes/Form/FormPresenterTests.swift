//
//  FormPresenterTests.swift
//  TesteiOS
//
//  Created by lucas.eiji.saito on 22/05/18.
//  Copyright (c) 2018 Accenture. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TesteiOS
import XCTest

class FormPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: FormPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupFormPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupFormPresenter()
  {
    sut = FormPresenter()
  }
  
  // MARK: Test doubles
  
  class FormDisplayLogicSpy: FormDisplayLogic
  {
    // MARK: Method call expectations
    var displayCellsCalled = false
    
    // MARK: Argument expectations
    var viewModel: Form.FetchCells.ViewModel!
    
    // MARK: Spied methods
    func displayCells(viewModel: Form.FetchCells.ViewModel)
    {
      displayCellsCalled = true
        self.viewModel = viewModel
    }
  }
  
  // MARK: Tests
  
  func testPresentFetchedCellsShouldAskViewControllerToDisplayFetchedCells()
  {
    // Given
    let spy = FormDisplayLogicSpy()
    sut.viewController = spy
    
    // When
    let cells = [Cell]()
    let response = Form.FetchCells.Response(cells: cells)
    sut.presentFetchedCells(response: response)
    
    // Then
    XCTAssertTrue(spy.displayCellsCalled, "presentFetchedCells(response:) should ask the view controller to display the result")
  }
}
