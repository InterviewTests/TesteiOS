//
//  InvestmentInteractor.swift
//  FinForm
//
//  Created by Gustavo on 25/07/18.
//  Copyright (c) 2018 Sore. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InvestmentBusinessLogic
{
  func fetchScreen(request: Investment.FetchScreen.Request)
}

protocol InvestmentDataStore
{
  var screen: Screen? { get set }
}

class InvestmentInteractor: InvestmentBusinessLogic, InvestmentDataStore
{
  var presenter: InvestmentPresentationLogic?
  var screenWorker: ScreenWorker?
  var screen: Screen?
  
  // MARK: Fetch Screen
  
  func fetchScreen(request: Investment.FetchScreen.Request)
  {
    screenWorker = ScreenWorker(screenEngine: ScreenRequester())
    var response = Investment.FetchScreen.Response()
    
    screenWorker?.fetchScreen(completionHandler: { (result) in
        switch result{
        case .Success(let screen):
            response.screen = screen
            self.presenter?.presentFetchedScreen(response: response)
        case .Failure(let error):
            switch error{
            case .RequestError(let requestRrror):
                switch requestRrror{
                case .NoInternetAcces:
                    response.screen = nil
                    response.noInternet = true
                    self.presenter?.presentFetchedScreen(response: response)
                default:
                    response.screen = nil
                    self.presenter?.presentFetchedScreen(response: response)
                    break
                }
                break
            default:
                response.screen = nil
                self.presenter?.presentFetchedScreen(response: response)
                break
            }
        }
    })
  }
}
