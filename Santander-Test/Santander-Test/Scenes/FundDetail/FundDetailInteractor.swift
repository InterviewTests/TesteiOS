//
//  FundDetailInteractor.swift
//  Santander-Test
//
//  Created by Matheus Ribeiro on 16/05/19.
//  Copyright (c) 2019 Matheus Ribeiro. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FundDetailBusinessLogic {
    func getFundDetail(request: FundDetail.GetFundDetail.Request)
}

protocol FundDetailDataStore {}

class FundDetailInteractor: FundDetailBusinessLogic, FundDetailDataStore {
    var presenter: FundDetailPresentationLogic?
    var worker: FundDetailWorker?
    
    func getFundDetail(request: FundDetail.GetFundDetail.Request) {
        worker = FundDetailWorker()
        worker?.getFund(completion: { [unowned self] (fund, error) in
            guard error == nil else {
                let response = FundDetail.FundDetailError.Response(error: error! as NSError, errorType: .getFundDetail)
                self.presenter?.presentError(response: response)
                return
            }
            
            guard let fund = fund else {
                let domain = "Não há fundo de investimento a ser exibido"
                let responseError = NSError(domain: domain, code: 200, userInfo: nil)
                let response = FundDetail.FundDetailError.Response(error: responseError, errorType: .missingFund)
                self.presenter?.presentError(response: response)
                return
            }
            let response = FundDetail.GetFundDetail.Response(fund: fund)
            self.presenter?.presentFundDetail(response: response)
        })
    }
}
