//
//  FormViewController.swift
//  Santander-Test
//
//  Created by Matheus Ribeiro on 14/05/19.
//  Copyright (c) 2019 Matheus Ribeiro. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FormDisplayLogic: class {
    func displaySomething(viewModel: Form.Something.ViewModel)
}

class FormViewController: UIViewController {
    
    @IBOutlet weak var tableView: UITableView!
    
    var interactor: FormBusinessLogic?
    var router: (NSObjectProtocol & FormRoutingLogic & FormDataPassing)?

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = FormInteractor()
        let presenter = FormPresenter()
        let router = FormRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    override func viewDidLoad() {
    super.viewDidLoad()
        
        setupTableView()
        
    }
    
    private func setupTableView() {
        registerTableViewCells()
    }
    
    private func registerTableViewCells() {
        let sendCell = UINib(nibName: "SendCell", bundle: nil)
        tableView.register(
            sendCell,
            forCellReuseIdentifier: SendCell.reuseIdentifier
        )
        
        let checkboxCell = UINib(nibName: "CheckBoxCell", bundle: nil)
        tableView.register(
            checkboxCell,
            forCellReuseIdentifier: CheckboxCell.reuseIdentifier
        )
        
        let textCell = UINib(nibName: "TextCell", bundle: nil)
        tableView.register(
            textCell,
            forCellReuseIdentifier: TextCell.reuseIdentifier
        )
        
        let fieldCell = UINib(nibName: "FieldCell", bundle: nil)
        tableView.register(
            fieldCell,
            forCellReuseIdentifier: FieldCell.reuseIdentifier
        )
    }

}

extension FormViewController: FormDisplayLogic {
    func displaySomething(viewModel: Form.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension FormViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 10
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "FieldCell") as! FieldCell
        
        return cell
    }
    
    
}
