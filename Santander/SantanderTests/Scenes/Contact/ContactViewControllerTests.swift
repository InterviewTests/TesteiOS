//
//  ContactViewControllerTests.swift
//  Santander
//
//  Created by Gabriel vieira on 4/23/18.
//  Copyright (c) 2018 Gabriel vieira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Santander
import XCTest

class ContactViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ContactViewController = ContactViewController()
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class ContactBusinessLogicSpy: ContactBusinessLogic
  {
    var fetchFormCellsCalled = false
    
    func fetchFormCells(request: Contact.fetchFormCells.Request) {
        fetchFormCellsCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldFetchCellsWhenViewIsLoaded()
  {
    // Given
    let spy = ContactBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.fetchFormCellsCalled, "viewDidLoad() should ask the interactor to do something")
  }
  
  func testDisplayCells()
  {
    // Given
    let data = Seed.CellData()
    let list = Seed.prepareViewModel(data.cells!)
    let viewModel = Contact.fetchFormCells.ViewModel(displayCells: list)
    
    // When
    loadView()
    sut.displayForm(viewModel: viewModel)
    
    XCTAssertTrue(sut.fieldList.count > 0)
    // Then
    //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
  }
}
