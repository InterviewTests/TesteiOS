//
//  InvestmentViewControllerTests.swift
//  Santander
//
//  Created by Gabriel vieira on 4/23/18.
//  Copyright (c) 2018 Gabriel vieira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Santander
import XCTest

class InvestmentViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: InvestmentViewController = InvestmentViewController()
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup

  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class InvestmentBusinessLogicSpy: InvestmentBusinessLogic
  {
    var fetchFundCalled = false
    
    func fetchFund(request: Investment.FetchFund.Request){
        fetchFundCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldfetchFundWhenViewIsLoaded()
  {
    // Given
    let spy = InvestmentBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.fetchFundCalled, "viewDidLoad() should ask the interactor to do something")
  }
  
  func testDisplayFund()
  {
    // Given
    let data = Seed.fundsData()
    let list = Seed.createProfiabilityList(fund: data)
    let viewModel = Investment.FetchFund.ViewModel(screen: data.screen!, profiabilityList: list)
    
    // When
    loadView()
    sut.displayFundDetail(viewModel: viewModel)
    
    // Then
    XCTAssertEqual(sut.fundNameLabel.text, "Vinci Valorem FI Multimercado", "displaySomething(viewModel:) should update the name text field")
  }
}
