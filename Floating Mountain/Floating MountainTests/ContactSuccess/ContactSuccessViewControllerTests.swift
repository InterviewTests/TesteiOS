//
//  ContactSuccessViewControllerTests.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/17/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Floating_Mountain
import XCTest

class ContactSuccessViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: ContactSuccessViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupContactSuccessViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupContactSuccessViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "ContactSuccessViewController") as? ContactSuccessViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class ContactSuccessBusinessLogicSpy: ContactSuccessBusinessLogic {
        var sendAnotherMessageCalled = false
        
        func sendAnotherMessage(request: ContactSuccess.SendAnotherMessage.Request) {
            sendAnotherMessageCalled = true
        }
    }
    
    func testDisplaySendAnotherMessage() {
        // Given
        let spy = ContactSuccessBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        sut.sendAnotherMessage()
        // Then
        XCTAssertTrue(spy.sendAnotherMessageCalled, "sendAnotherMessage() should ask the interactor to send another message")
    }
}
