//
//  ContactSuccessInteractorTests.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/17/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Floating_Mountain
import XCTest

class ContactSuccessInteractorTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: ContactSuccessInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupContactSuccessInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupContactSuccessInteractor() {
        sut = ContactSuccessInteractor()
    }
    
    // MARK: Test doubles
    
    class ContactSuccessPresentationLogicSpy: ContactSuccessPresentationLogic {
        var presentSendAnotherMessageCalled = false
        
        func presentSendAnotherMessage(response: ContactSuccess.SendAnotherMessage.Response) {
            presentSendAnotherMessageCalled = true
        }
    }
    
    // MARK: Tests
    
    func testSendAnotherMessage() {
        // Given
        let spy = ContactSuccessPresentationLogicSpy()
        sut.presenter = spy
        let request = ContactSuccess.SendAnotherMessage.Request()
        
        // When
        sut.sendAnotherMessage(request: request)
        
        // Then
        XCTAssertTrue(spy.presentSendAnotherMessageCalled, "doSomething(request:) should ask the presenter to format the result")
    }
}
