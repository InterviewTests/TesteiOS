//
//  InvestmentsInteractorTests.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/16/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Floating_Mountain
import XCTest

class InvestmentsInteractorTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: InvestmentsInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupInvestmentsInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupInvestmentsInteractor() {
        sut = InvestmentsInteractor()
    }
    
    // MARK: Test doubles
    
    class InvestmentsPresentationLogicSpy: InvestmentsPresentationLogic {
        var presentFundsCalled = false
        var presentMoreInfoCalled = false
        
        func presentFunds(response: Investments.FetchInvestments.Response) {
            presentFundsCalled = true
        }
        
        func presentMoreInfo() {
            presentMoreInfoCalled = true
        }
        
    }
    
    // MARK: Tests
    
    func testPresentFunds() {
        // Given
        let spy = InvestmentsPresentationLogicSpy()
        sut.presenter = spy
        let request = Investments.FetchInvestments.Request()
        
        // When
        sut.fetch(request: request)
        
        // Then
        DispatchQueue.main.asyncAfter(deadline: .now() + 2.0) {
            XCTAssertTrue(spy.presentFundsCalled, "fetch(request:) should ask the presenter to format the result")
        }
        
    }
    
    
    func testDownloadMoreInfo() {
        // Given
        let spy = InvestmentsPresentationLogicSpy()
        sut.presenter = spy
        
        // When
        sut.downloadMoreInfo()
        
        // Then
        XCTAssertTrue(spy.presentMoreInfoCalled, "downloadMoreInfo() should ask the presenter to format the result")
    }
    
}
