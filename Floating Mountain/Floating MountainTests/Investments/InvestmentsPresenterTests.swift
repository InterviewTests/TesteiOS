//
//  InvestmentsPresenterTests.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/16/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Floating_Mountain
import XCTest

enum FakeError: Error {
    case fake
}

class InvestmentsPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: InvestmentsPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupInvestmentsPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupInvestmentsPresenter() {
        sut = InvestmentsPresenter()
    }
    
    // MARK: Test doubles
    
    class InvestmentsDisplayLogicSpy: InvestmentsDisplayLogic {
        
        var displayInvestmentsCalled = false
        var displayError = false
        var displayMoreInfo = false
        
        func displayInvestments(viewModel: Investments.FetchInvestments.ViewModel) {
            displayInvestmentsCalled = true
        }
        
        func displayError(error: Error) {
            displayError = true
        }
        
        func displayMoreInfo(viewModel: Investments.DownloadMoreInfo.ViewModel) {
            displayMoreInfo = true
        }
        
    }
    
    // MARK: Tests
    
    func testPresentFunds() {
        // Given
        let spy = InvestmentsDisplayLogicSpy()
        sut.viewController = spy
        let response = Investments.FetchInvestments.Response(fund: Fund(screen: Fund.Screen(
            title: "test",
            fundName: "test",
            whatIs: "test",
            definition: "test",
            riskTitle: "test",
            risk: 3,
            infoTitle: "test",
            moreInfo: Fund.Screen.MoreInfo(
                month: Fund.Screen.MoreInfo.Details(fund: 20.0, cdi: 20.0),
                year: Fund.Screen.MoreInfo.Details(fund: 20.0, cdi: 20.0),
                twelveMonths: Fund.Screen.MoreInfo.Details(fund: 20.0, cdi: 20.0)),
            info: [Fund.Screen.Info(name: "test", data: nil)],
            downInfo: [Fund.Screen.Info(name: "test", data: nil)]
        )),error: nil)
        
        // When
        sut.presentFunds(response: response)
        
        // Then
        XCTAssertTrue(spy.displayInvestmentsCalled, "presentFunds(response:) should ask the view controller to display the result")
    }
    
    func testDisplayError() {
        // Given
        let spy = InvestmentsDisplayLogicSpy()
        sut.viewController = spy
        let response = Investments.FetchInvestments.Response(fund: nil, error: FakeError.fake)
        
        // When
        sut.presentFunds(response: response)
        
        // Then
        XCTAssertTrue(spy.displayError, "presentFunds(response:) should ask the view controller to display the result")
    }
    
    func testDisplayMoreInfo() {
        // Given
        let spy = InvestmentsDisplayLogicSpy()
        sut.viewController = spy
        let response = Investments.DownloadMoreInfo.Response(url: URL(string: "https://www.google.com")!)
        // When
        sut.presentMoreInfo(response: response)
        
        // Then
        XCTAssertTrue(spy.displayMoreInfo, "presentMoreInfo() should ask the view controller to display the result")
    }
    
}
