//
//  ContactPresenter.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/14/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol ContactPresentationLogic {
    func presentForm(response: Contact.FetchForm.Response)
    func presentContactSuccess()
    func changeVisibilityOfField(with identifier: Int, to visibility: Bool)
}

class ContactPresenter: ContactPresentationLogic {
    weak var viewController: ContactDisplayLogic?
    
    // MARK: Do something
    
    func presentForm(response: Contact.FetchForm.Response) {
        if let form = response.form {
            let cells = form.cells.map { cell in Contact.FetchForm.ViewModel.CellViewModel(
                id: cell.id,
                type: cell.type,
                message: cell.message,
                typefield: cell.typefield,
                hidden: cell.hidden,
                topSpacing: cell.topSpacing,
                show: cell.show,
                required: cell.required) }
            
            let viewModel = Contact.FetchForm.ViewModel(cells: cells)
            viewController?.displayForm(viewModel: viewModel)
        } else if let error = response.error {
            viewController?.displayError(error: error)
        }
    }
    
    func presentContactSuccess() {
        viewController?.displayContactSuccess()
    }
    
    func changeVisibilityOfField(with identifier: Int, to visibility: Bool) {
        viewController?.changeVisibilityOfField(with: identifier, to: visibility)
    }
    
}
