//
//  ContactRouter.swift
//  Floating Mountain
//
//  Created by Leonardo Oliveira on 9/14/18.
//  Copyright (c) 2018 Leonardo Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ContactRoutingLogic {
    func routeToContactSuccess(segue: UIStoryboardSegue?)
}

protocol ContactDataPassing {
    var dataStore: ContactDataStore? { get }
}

class ContactRouter: NSObject, ContactRoutingLogic, ContactDataPassing {
    weak var viewController: ContactViewController?
    var dataStore: ContactDataStore?
    
    // MARK: Routing
    
    func routeToContactSuccess(segue: UIStoryboardSegue?) {
        if let segue = segue {
            let destinationVC = segue.destination as! ContactSuccessViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToContactSuccess(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "ContactSuccessViewController") as! ContactSuccessViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToContactSuccess(source: dataStore!, destination: &destinationDS)
            navigateToContactSuccess(source: viewController!, destination: destinationVC)
        }
    }
    
    // MARK: Navigation
    
    func navigateToContactSuccess(source: ContactViewController, destination: ContactSuccessViewController) {
        source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passDataToContactSuccess(source: ContactDataStore, destination: inout ContactSuccessDataStore) {
        
    }
}
