//
//  FormWorker.swift
//  DesafioSantander
//
//  Created by Fernanda de Lima on 03/09/2018.
//  Copyright (c) 2018 FeLima. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class FormWorker{
    var formStore: FormStoreProtocol
    
    init(formStore: FormStoreProtocol){
        self.formStore = formStore
    }
    
    func fetchForm(completionHandler: @escaping (FormModal) -> Void){
        formStore.fetchForms { (form, error) in
            do {
                DispatchQueue.main.async {
                    completionHandler(form)
                }
            } catch {
                DispatchQueue.main.async {
                    completionHandler(form )
                }
            }
        }
        
    }
  
}


// MARK: - Orders store API

protocol FormStoreProtocol{
    // MARK: CRUD operations - Optional error
    func fetchForms(completionHandler: @escaping (FormModal, Error?) -> Void)
    
}


