//
//  investmentoWorker.swift
//  santanderTest
//
//  Created by Adauto Oliveira on 27/05/19.
//  Copyright (c) 2019 Adauto Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class investmentoWorker
{
  func doSomeWork(){
    let basePath = "https://floating-mountain-50292.herokuapp.com/fund.json"
    let configuration: URLSessionConfiguration = {
      let config = URLSessionConfiguration.default
        config.allowsCellularAccess = true
        config.httpAdditionalHeaders = ["Content-Type" : "aplication/json"]
        config.timeoutIntervalForRequest = 30.0
        config.httpMaximumConnectionsPerHost = 5
        
        return config
        
    }()
    
    let session = URLSession(configuration: configuration)
    typealias RestLoadScreen = (Screen) -> Void
    
    func loadScreen(completion: @escaping (Screen?) -> Void){
        guard let url = URL(string: basePath) else {return}
        
        let dataTask = session.dataTask(with: url) { (data: Data?, response: URLResponse?, error: Error?) in
            if error == nil {
                guard let response = response as? HTTPURLResponse else {return}
                if response.statusCode == 200 {
                    guard let data = data else {return}
                    do{
                        let screens = try JSONDecoder().decode([investmento.Something.ViewModel.DiplayedInvest].self, from: data)
                        for screen in screens {
                            print(screen.title)
                        }
                        
                    }catch{
                        print(error.localizedDescription)
                    }
                }else {
                    print(error?.localizedDescription)
                }
            }else {
                print(error?.localizedDescription)
            }
        }
        dataTask.resume()
        
    }
  }
}
