//
//  ShowInvestmentViewController.swift
//  iOSTest
//
//  Created by erick.peripolli on 29/07/18.
//  Copyright (c) 2018 Erick Peripolli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowInvestmentDisplayLogic: class {
    func displayInvestmentInfo(viewModel: ShowInvestment.GetInvestmentInfo.ViewModel)
}

class ShowInvestmentViewController: UIViewController, ShowInvestmentDisplayLogic {
    var interactor: ShowInvestmentBusinessLogic?
    var router: (NSObjectProtocol & ShowInvestmentRoutingLogic & ShowInvestmentDataPassing)?
    
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var fundNameLabel: UILabel!
    @IBOutlet weak var whatIsLabel: UILabel!
    @IBOutlet weak var definitionLabel: UILabel!
    @IBOutlet weak var riskTitleLabel: UILabel!
    
    @IBOutlet weak var infoTitleLabel: UILabel!
    @IBOutlet weak var fundMonthDataLabel: UILabel!
    @IBOutlet weak var CDIMonthDataLabel: UILabel!
    @IBOutlet weak var fundYearDataLabel: UILabel!
    @IBOutlet weak var CDIYearDataLabel: UILabel!
    @IBOutlet weak var fund12DataLabel: UILabel!
    @IBOutlet weak var CDI12DataLabel: UILabel!
    
    @IBOutlet weak var admFeeLabel: UILabel!
    @IBOutlet weak var admDataLabel: UILabel!
    
    @IBOutlet weak var initialLabel: UILabel!
    @IBOutlet weak var initialDataLabel: UILabel!
    
    @IBOutlet weak var minimalMovLabel: UILabel!
    @IBOutlet weak var minimalMovDataLabel: UILabel!
    
    @IBOutlet weak var minimalBalanceLabel: UILabel!
    @IBOutlet weak var minimalBalanceDataLabel: UILabel!
    
    @IBOutlet weak var rescueLabel: UILabel!
    @IBOutlet weak var rescueDataLabel: UILabel!
    
    @IBOutlet weak var feeLabel: UILabel!
    @IBOutlet weak var feeDataLabel: UILabel!
    
    @IBOutlet weak var paymentLabel: UILabel!
    @IBOutlet weak var paymentDataLabel: UILabel!
    
    @IBOutlet weak var essentialLabel: UILabel!
    @IBOutlet weak var performanceLabel: UILabel!
    @IBOutlet weak var complementaryLabel: UILabel!
    @IBOutlet weak var regulationLabel: UILabel!
    @IBOutlet weak var accessLabel: UILabel!
    
    // MARK: Object lifecycle
  
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = ShowInvestmentInteractor()
        let presenter = ShowInvestmentPresenter()
        let router = ShowInvestmentRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        getInvestmentInfo()
    }

    // MARK: Do something

    //@IBOutlet weak var nameTextField: UITextField!

    func getInvestmentInfo() {
        let request = ShowInvestment.GetInvestmentInfo.Request()
        interactor?.getInvestmentInfo(request: request)
    }

    func displayInvestmentInfo(viewModel: ShowInvestment.GetInvestmentInfo.ViewModel) {
        //nameTextField.text = viewModel.name
        
        DispatchQueue.main.async {
            let titleViewModel = viewModel.titleInfo
            self.titleLabel.text = titleViewModel.title
            self.fundNameLabel.text = titleViewModel.fundName
            self.whatIsLabel.text = titleViewModel.whatIs
            self.definitionLabel.text = titleViewModel.definition
            self.riskTitleLabel.text = titleViewModel.riskTitle
            // risk
            
            let investmentViewModel = viewModel.investmentInfo
            self.infoTitleLabel.text = investmentViewModel.infoTitle
            self.fundMonthDataLabel.text = investmentViewModel.fundMonthData
            self.CDIMonthDataLabel.text = investmentViewModel.CDIMonthData
            self.fundYearDataLabel.text = investmentViewModel.fundYearData
            self.CDIYearDataLabel.text = investmentViewModel.CDIYearData
            self.fund12DataLabel.text = investmentViewModel.fund12Data
            self.CDIYearDataLabel.text = investmentViewModel.CDI12Data
            
            let moreInfoViewModel = viewModel.moreInfo
            self.admFeeLabel.text = moreInfoViewModel.admFee
            self.admDataLabel.text = moreInfoViewModel.admData
            self.initialLabel.text = moreInfoViewModel.initial
            self.initialDataLabel.text = moreInfoViewModel.initialData
            self.minimalMovLabel.text = moreInfoViewModel.minimalMov
            self.minimalMovDataLabel.text = moreInfoViewModel.minimalMovData
            self.minimalBalanceLabel.text = moreInfoViewModel.minimalBalance
            self.minimalBalanceDataLabel.text = moreInfoViewModel.minimalBalanceData
            self.rescueLabel.text = moreInfoViewModel.rescue
            self.rescueDataLabel.text = moreInfoViewModel.rescueData
            self.feeLabel.text = moreInfoViewModel.fee
            self.feeDataLabel.text = moreInfoViewModel.feeData
            self.paymentLabel.text = moreInfoViewModel.payment
            self.paymentDataLabel.text = moreInfoViewModel.paymentData
            
            let downloadableInfoViewModel = viewModel.downloadableInfo
            self.essentialLabel.text = downloadableInfoViewModel.essential
            self.performanceLabel.text = downloadableInfoViewModel.performance
            self.complementaryLabel.text = downloadableInfoViewModel.complementary
            self.regulationLabel.text = downloadableInfoViewModel.regulation
            self.accessLabel.text = downloadableInfoViewModel.access
        }
    }
}
