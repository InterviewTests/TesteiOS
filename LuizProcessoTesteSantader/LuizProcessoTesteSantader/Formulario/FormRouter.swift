//
//  FormRouter.swift
//  LuizProcessoTesteSantader
//
//  Created by Luiz Otavio Processo on 26/09/19.
//  Copyright (c) 2019 Luiz Otavio Processo. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol FormRoutingLogicProtocol{
    func routeToInvestiment()
    func routeToMessage()
}

protocol FormDataPassingProtocol{
  var dataStore: FormDataStoreProtocol? { get }
}

class FormRouter: NSObject, FormRoutingLogicProtocol, FormDataPassingProtocol{
    weak var viewController: FormViewController?
    var dataStore: FormDataStoreProtocol?
    
  // MARK: Routing
    
    func routeToInvestiment() {
        let destination = InvestViewController()
        navigateToInvestiment(source: viewController!, destination: destination )
    }
    
    func routeToMessage() {
        let destination = MessageViewController()
        navigateToMessage(source: viewController!, destination: destination )
    }
    
    // MARK: Navigation
    
    func navigateToInvestiment(source: FormViewController, destination: InvestViewController){
        source.navigationController?.pushViewController(destination, animated: false)
    }
    
    func navigateToMessage(source: FormViewController, destination: MessageViewController){
        source.navigationController?.pushViewController(destination, animated: false)
    }
    
  // MARK: Passing data
  
  //func passDataToSomewhere(source: FormDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
